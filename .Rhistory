setwd("~/")
setwd("C:/UofA/mod15/MechaCar_Statistical_Analysis")
setwd("C:/UofA/mod15/MechaCar_Statistical_Analysis")
mpg = read.csv('data/MechaCar_mpg.csv')
head(mpg)
library(dplyr)
?lm()
#multiple liner regression
lm(mpg ~ vehicle_lenght + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg) #generate multiple linear regression model
#multiple liner regression
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_lenght + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg))
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg))
mpg = read.csv('data/MechaCar_mpg.csv')
head(mpg)
library(dplyr)
#multiple liner regression
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg))
#multiple liner regression using groud clearance and vehicle length
lm(mpg ~ vehicle_length + ground_clearance,data=mpg) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + ground_clearance,data=mpg))
#liner regression model of qsec and hp
lm(mpg ~ vehicle_length,mpg) #create linear model
summary(lm(mpg ~ vehicle_length,mpg))
model <- lm(mpg ~ vehicle_length,mpg) #create linear model
yvals <- model$coefficients['vehicle_length']*mpg$vehicle_length +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mpg,aes(x=vehicle_length,y=mpg)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
library(tidyverse)
model <- lm(mpg ~ vehicle_length,mpg) #create linear model
yvals <- model$coefficients['vehicle_length']*mpg$vehicle_length +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mpg,aes(x=vehicle_length,y=mpg)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
suspension_coil = read.csv('data/Suspension_coil.csv')
head(suspension_coil)
?summarise()
total_summary = summarise(suspension_coil)
View(total_summary)
total_summary = summarise(suspension_coil, mean, median, variance, sd)
#This will group by manufacturer and count the number of vehicle
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
total_summary = summarise(mean(psi), median()pse, variance(psi), sd(psi))
total_summary = summarise(mean(psi), median(psi), variance(psi), sd(psi))
total_summary = suspension_coil %>% summarise(mean(psi), median(psi), variance(psi), sd(psi))
total_summary = suspension_coil$PSI %>% summarise(mean(PSI), median(PSI), variance(PSI), sd(PSI))
total_summary = suspension_coil %>% summarise(mean=mean(PSI)) #, median(PSI), variance(PSI), sd(PSI))
View(total_summary)
total_summary = suspension_coil %>% summarise(mean=mean(PSI), median=median(PSI), variance=variance(PSI), SD=sd(PSI))
total_summary = suspension_coil %>% summarise(mean=mean(PSI), median=median(PSI), variance=variance(PSI), SD=sd(PSI))
total_summary = suspension_coil %>% summarise(mean=mean(PSI), median=median(PSI), SD=sd(PSI))
total_summary = suspension_coil %>% summarise(mean=mean(PSI), median=median(PSI), Variance=sd(psi)^2, SD=sd(PSI))
total_summary = suspension_coil %>% summarise(mean=mean(PSI), median=median(PSI), Variance=var(psi), SD=sd(PSI))
total_summary = suspension_coil %>% summarise(mean=mean(PSI), median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(total_summary)
#summary table by lot#
summary_lot = suspension_coil %>% group_by('Manufacturing_Lot') %>% summarise(mean=mean(PSI), median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(summary_lot)
#summary table by lot#
summary_lot = suspension_coil %>% group_by(Manufacturing_Lot) %>% summarise(mean=mean(PSI), median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(summary_lot)
?t.test()
t.test(suspension_coil$PSI)
#t-test of suspension coils.
t.test(suspension_coil$PSI, mu=mean(suspension_coil$PSI))
#t-test by lot number
t.test(subset='Lot1' , suspension_coil$PSI, mu=mean(suspension_coil$PSI))
#t-test by lot number
t.test(subset=='Lot1' , suspension_coil$PSI, mu=mean(suspension_coil$PSI))
#t-test of suspension coils.
t.test(suspension_coil$PSI, mu=1500)
#t-test by lot number
lot1 = t.test(suspension_coil$PSI, subset(suspension_coil$Manufacturing_Lot == "Lot1"), mu=1500)
#t-test by lot number
lot1 = t.test(suspension_coil$PSI, subset=suspension_coil$Manufacturing_Lot == "Lot1", mu=1500)
View(lot1)
#t-test by lot number
t.test(suspension_coil$PSI, subset=suspension_coil$Manufacturing_Lot == "Lot1", mu=1500)
#t-test of suspension coils.
t.test(suspension_coil$PSI, mu=1500)
#t-test by lot number
t.test(suspension_coil$PSI, subset=suspension_coil$Manufacturing_Lot == "Lot1", mu=1500)
t.test(suspension_coil$PSI, subset=suspension_coil$Manufacturing_Lot == "Lot2", mu=1500)
t.test(suspension_coil$PSI, subset=suspension_coil$Manufacturing_Lot == "Lot3", mu=1500)
#t-test by lot number
t.test(subset(subset=suspension_coil$Manufacturing_Lot == "Lot1"), suspension_coil$PSI, mu=1500)
#t-test by lot number
t.test(subset(suspension_coil$Manufacturing_Lot == "Lot1"), suspension_coil$PSI, mu=1500)
#t-test by lot number
t.test(subset(suspension_coil,Manufacturing_Lot == "Lot1"), suspension_coil$PSI, mu=1500)
#t-test by lot number
t.test(suspension_coil$PSI, mu=1500, subset=suspension_coil$Manufacturing_Lot == "Lot1")
#t-test by lot number
t.test(suspension_coil$PSI, mu=1500, subset=suspension_coil$Manufacturing_Lot == "Lot1")
t.test(suspension_coil$PSI, mu=1500, subset=suspension_coil$Manufacturing_Lot == "Lot2")
t.test(suspension_coil$PSI, mu=1500, subset=suspension_coil$Manufacturing_Lot == "Lot3")
#t-test by lot number
t.test(suspension_coil$PSI, mu=1500, subset=Manufacturing_Lot == "Lot1")
t.test(suspension_coil$PSI, mu=1500, subset=Manufacturing_Lot == "Lot2")
#t-test by lot number
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI, mu=1500)
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot2")$PSI, mu=1500)
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot3")$PSI, mu=1500)
#t-test by lot number
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI, mu=1500, conf.level=99)
#t-test by lot number
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI, mu=1500, conf.level=1)
#t-test by lot number
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI, mu=1500, conf.level=1)
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot2")$PSI, mu=1500, conf.level = 1)
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot3")$PSI, mu=1500, conf.level = 1)
#t-test by lot number
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI, mu=1500, conf.level=0)
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot2")$PSI, mu=1500, conf.level = 0)
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot3")$PSI, mu=1500, conf.level = 0)
#t-test by lot number
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI, mu=1500, conf.level=.99)
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot2")$PSI, mu=1500, conf.level = .99)
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot3")$PSI, mu=1500, conf.level = .99)
#t-test by lot number
lot1 = t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI, mu=1500, conf.level=.99)
lot2 = t.test(subset(suspension_coil,Manufacturing_Lot=="Lot2")$PSI, mu=1500, conf.level = .99)
lot3 = t.test(subset(suspension_coil,Manufacturing_Lot=="Lot3")$PSI, mu=1500, conf.level = .99)
View(lot1)
View(lot2)
View(lot3)
#t-test of suspension coils.
t.test(suspension_coil$PSI, mu=1500)
summary_t-test = t.test(suspension_coil$PSI, mu=1500)
summary_t.test = t.test(suspension_coil$PSI, mu=1500)
View(summary_t.test)
